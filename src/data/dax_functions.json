[
    {
        "function": "APPROXIMATEDISTINCTCOUNT",
        "description": "Returns an estimated count of unique values in a column."
    },
    {
        "function": "AVERAGE",
        "description": "Returns the average (arithmetic mean) of all the numbers in a column."
    },
    {
        "function": "AVERAGEA",
        "description": "Returns the average (arithmetic mean) of the values in a column."
    },
    {
        "function": "AVERAGEX",
        "description": "Calculates the average (arithmetic mean) of a set of expressions evaluated over a table."
    },
    {
        "function": "COUNT",
        "description": "Counts the number of rows in the specified column that contain non-blank values."
    },
    {
        "function": "COUNTA",
        "description": "Counts the number of rows in the specified column that contain non-blank values."
    },
    {
        "function": "COUNTAX",
        "description": "Counts non-blank results when evaluating the result of an expression over a table."
    },
    {
        "function": "COUNTBLANK",
        "description": "Counts the number of blank cells in a column."
    },
    {
        "function": "COUNTROWS",
        "description": "Counts the number of rows in the specified table, or in a table defined by an expression."
    },
    {
        "function": "COUNTX",
        "description": "Counts the number of rows that contain a number or an expression that evaluates to a number, when evaluating an expression over a table."
    },
    {
        "function": "DISTINCTCOUNT",
        "description": "Counts the number of distinct values in a column."
    },
    {
        "function": "DISTINCTCOUNTNOBLANK",
        "description": "Counts the number of distinct values in a column."
    },
    {
        "function": "MAX",
        "description": "Returns the largest numeric value in a column, or between two scalar expressions."
    },
    {
        "function": "MAXA",
        "description": "Returns the largest value in a column."
    },
    {
        "function": "MAXX",
        "description": "Evaluates an expression for each row of a table and returns the largest numeric value."
    },
    {
        "function": "MIN",
        "description": "Returns the smallest numeric value in a column, or between two scalar expressions."
    },
    {
        "function": "MINA",
        "description": "Returns the smallest value in a column, including any logical values and numbers represented as text."
    },
    {
        "function": "MINX",
        "description": "Returns the smallest numeric value that results from evaluating an expression for each row of a table."
    },
    {
        "function": "PRODUCT",
        "description": "Returns the product of the numbers in a column."
    },
    {
        "function": "PRODUCTX",
        "description": "Returns the product of an expression evaluated for each row in a table."
    },
    {
        "function": "SUM",
        "description": "Adds all the numbers in a column."
    },
    {
        "function": "SUMX",
        "description": "Returns the sum of an expression evaluated for each row in a table."
    },
    {
        "function": "CALENDAR",
        "description": "Returns a table with a single column named \"Date\" that contains a contiguous set of dates."
    },
    {
        "function": "CALENDARAUTO",
        "description": "Returns a table with a single column named \"Date\" that contains a contiguous set of dates."
    },
    {
        "function": "DATE",
        "description": "Returns the specified date in datetime format."
    },
    {
        "function": "DATEDIFF",
        "description": "Returns the number of interval boundaries between two dates."
    },
    {
        "function": "DATEVALUE",
        "description": "Converts a date in the form of text to a date in datetime format."
    },
    {
        "function": "DAY",
        "description": "Returns the day of the month, a number from 1 to 31."
    },
    {
        "function": "EDATE",
        "description": "Returns the date that is the indicated number of months before or after the start date."
    },
    {
        "function": "EOMONTH",
        "description": "Returns the date in datetime format of the last day of the month, before or after a specified number of months."
    },
    {
        "function": "HOUR",
        "description": "Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.)."
    },
    {
        "function": "MINUTE",
        "description": "Returns the minute as a number from 0 to 59, given a date and time value."
    },
    {
        "function": "MONTH",
        "description": "Returns the month as a number from 1 (January) to 12 (December)."
    },
    {
        "function": "NETWORKDAYS",
        "description": "Returns the number of whole workdays between two dates."
    },
    {
        "function": "NOW",
        "description": "Returns the current date and time in datetime format."
    },
    {
        "function": "QUARTER",
        "description": "Returns the quarter as a number from 1 to 4."
    },
    {
        "function": "SECOND",
        "description": "Returns the seconds of a time value, as a number from 0 to 59."
    },
    {
        "function": "TIME",
        "description": "Converts hours, minutes, and seconds given as numbers to a time in datetime format."
    },
    {
        "function": "TIMEVALUE",
        "description": "Converts a time in text format to a time in datetime format."
    },
    {
        "function": "TODAY",
        "description": "Returns the current date."
    },
    {
        "function": "UTCNOW",
        "description": "Returns the current UTC date and time"
    },
    {
        "function": "UTCTODAY",
        "description": "Returns the current UTC date."
    },
    {
        "function": "WEEKDAY",
        "description": "Returns a number from 1 to 7 identifying the day of the week of a date."
    },
    {
        "function": "WEEKNUM",
        "description": "Returns the week number for the given date and year according to the return_type value."
    },
    {
        "function": "YEAR",
        "description": "Returns the year of a date as a four digit integer in the range 1900-9999."
    },
    {
        "function": "YEARFRAC",
        "description": "Calculates the fraction of the year represented by the number of whole days between two dates."
    },
    {
        "function": "ALL",
        "description": "Returns all the rows in a table, or all the values in a column, ignoring any filters that might have been applied."
    },
    {
        "function": "ALLCROSSFILTERED",
        "description": "Clear all filters which are applied to a table."
    },
    {
        "function": "ALLEXCEPT",
        "description": "Removes all context filters in the table except filters that have been applied to the specified columns."
    },
    {
        "function": "ALLNOBLANKROW",
        "description": "From the parent table of a relationship, returns all rows but the blank row, or all distinct values of a column but the blank row, and disregards any context filters that might exist."
    },
    {
        "function": "ALLSELECTED",
        "description": "Removes context filters from columns and rows in the current query, while retaining all other context filters or explicit filters."
    },
    {
        "function": "CALCULATE",
        "description": "Evaluates an expression in a modified filter context."
    },
    {
        "function": "CALCULATETABLE",
        "description": "Evaluates a table expression in a modified filter context."
    },
    {
        "function": "EARLIER",
        "description": "Returns the current value of the specified column in an outer evaluation pass of the mentioned column."
    },
    {
        "function": "EARLIEST",
        "description": "Returns the current value of the specified column in an outer evaluation pass of the specified column."
    },
    {
        "function": "FILTER",
        "description": "Returns a table that represents a subset of another table or expression."
    },
    {
        "function": "FIRST",
        "description": "Used in visual calculations only. Retrieves a value in the visual matrix from the first row of an axis."
    },
    {
        "function": "INDEX",
        "description": "Returns a row at an absolute position, specified by the position parameter, within the specified partition, sorted by the specified order or on the specified axis."
    },
    {
        "function": "KEEPFILTERS",
        "description": "Modifies how filters are applied while evaluating a CALCULATE or CALCULATETABLE function."
    },
    {
        "function": "LAST",
        "description": "Used in visual calculations only. Retrieves a value in the visual matrix from the last row of an axis."
    },
    {
        "function": "LOOKUPVALUE",
        "description": "Returns the value for the row that meets all criteria specified by search conditions. The function can apply one or more search conditions."
    },
    {
        "function": "MATCHBY",
        "description": "In window functions, defines the columns that are used to determine how to match data and identify the current row."
    },
    {
        "function": "MOVINGAVERAGE",
        "description": "Returns a moving average calculated along the given axis of the visual matrix."
    },
    {
        "function": "NEXT",
        "description": "Used in visual calculations only. Retrieves a value in the next row of an axis in the visual matrix."
    },
    {
        "function": "OFFSET",
        "description": "Returns a single row that is positioned either before or after the current row within the same table, by a given offset."
    },
    {
        "function": "ORDERBY",
        "description": "Defines the columns that determine the sort order within each of a window function\u2019s partitions."
    },
    {
        "function": "PARTITIONBY",
        "description": "Defines the columns that are used to partition a window function\u2019s relation parameter."
    },
    {
        "function": "PREVIOUS",
        "description": "Used in visual calculations only. Retrieves a value in the previous row of an axis in the visual matrix."
    },
    {
        "function": "RANGE",
        "description": "Returns an interval of rows within the given axis, relative to the current row. A shortcut for WINDOW."
    },
    {
        "function": "RANK",
        "description": "Returns the ranking of a row within the given interval."
    },
    {
        "function": "REMOVEFILTERS",
        "description": "Clears filters from the specified tables or columns."
    },
    {
        "function": "ROWNUMBER",
        "description": "Returns the unique ranking of a row within the given interval."
    },
    {
        "function": "RUNNINGSUM",
        "description": "Returns a running sum calculated along the given axis of the visual matrix."
    },
    {
        "function": "SELECTEDVALUE",
        "description": "Returns the value when the context for columnName has been filtered down to one distinct value only. Otherwise returns alternateResult."
    },
    {
        "function": "WINDOW",
        "description": "Returns multiple rows which are positioned within the given interval."
    },
    {
        "function": "ACCRINT",
        "description": "Returns the accrued interest for a security that pays periodic interest."
    },
    {
        "function": "ACCRINTM",
        "description": "Returns the accrued interest for a security that pays interest at maturity."
    },
    {
        "function": "AMORDEGRC",
        "description": "Returns the depreciation for each accounting period. Similar to AMORLINC, except a depreciation coefficient is applied depending on the life of the assets."
    },
    {
        "function": "AMORLINC",
        "description": "Returns the depreciation for each accounting period."
    },
    {
        "function": "COUPDAYBS",
        "description": "Returns the number of days from the beginning of a coupon period until its settlement date."
    },
    {
        "function": "COUPDAYS",
        "description": "Returns the number of days in the coupon period that contains the settlement date."
    },
    {
        "function": "COUPDAYSNC",
        "description": "Returns the number of days from the settlement date to the next coupon date."
    },
    {
        "function": "COUPNCD",
        "description": "Returns the next coupon date after the settlement date."
    },
    {
        "function": "COUPNUM",
        "description": "Returns the number of coupons payable between the settlement date and maturity date, rounded up to the nearest whole coupon."
    },
    {
        "function": "COUPPCD",
        "description": "Returns the previous coupon date before the settlement date."
    },
    {
        "function": "CUMIPMT",
        "description": "Returns the cumulative interest paid on a loan between start_period and end_period."
    },
    {
        "function": "CUMPRINC",
        "description": "Returns the cumulative principal paid on a loan between start_period and end_period."
    },
    {
        "function": "DB",
        "description": "Returns the depreciation of an asset for a specified period using the fixed-declining balance method."
    },
    {
        "function": "DDB",
        "description": "Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify."
    },
    {
        "function": "DISC",
        "description": "Returns the discount rate for a security."
    },
    {
        "function": "DOLLARDE",
        "description": "Converts a dollar price expressed as an integer part and a fraction part, such as 1.02, into a dollar price expressed as a decimal number."
    },
    {
        "function": "DOLLARFR",
        "description": "Converts a dollar price expressed as an integer part and a fraction part, such as 1.02, into a dollar price expressed as a decimal number."
    },
    {
        "function": "DURATION",
        "description": "Returns the Macauley duration for an assumed par value of $100."
    },
    {
        "function": "EFFECT",
        "description": "Returns the effective annual interest rate, given the nominal annual interest rate and the number of compounding periods per year."
    },
    {
        "function": "FV",
        "description": "Calculates the future value of an investment based on a constant interest rate."
    },
    {
        "function": "INTRATE",
        "description": "Returns the interest rate for a fully invested security."
    },
    {
        "function": "IPMT",
        "description": "Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate."
    },
    {
        "function": "ISPMT",
        "description": "Calculates the interest paid (or received) for the specified period of a loan (or investment) with even principal payments."
    },
    {
        "function": "MDURATION",
        "description": "Returns the modified Macauley duration for a security with an assumed par value of $100."
    },
    {
        "function": "NOMINAL",
        "description": "Returns the nominal annual interest rate, given the effective rate and the number of compounding periods per year."
    },
    {
        "function": "NPER",
        "description": "Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate."
    },
    {
        "function": "ODDFPRICE",
        "description": "Returns the price per $100 face value of a security having an odd (short or long) first period."
    },
    {
        "function": "ODDFYIELD",
        "description": "Returns the yield of a security that has an odd (short or long) first period."
    },
    {
        "function": "ODDLPRICE",
        "description": "Returns the price per $100 face value of a security having an odd (short or long) last coupon period."
    },
    {
        "function": "ODDLYIELD",
        "description": "Returns the yield of a security that has an odd (short or long) last period."
    },
    {
        "function": "PDURATION",
        "description": "Returns the number of periods required by an investment to reach a specified value."
    },
    {
        "function": "PMT",
        "description": "Calculates the payment for a loan based on constant payments and a constant interest rate."
    },
    {
        "function": "PPMT",
        "description": "Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate."
    },
    {
        "function": "PRICE",
        "description": "Returns the price per $100 face value of a security that pays periodic interest."
    },
    {
        "function": "PRICEDISC",
        "description": "Returns the price per $100 face value of a discounted security."
    },
    {
        "function": "PRICEMAT",
        "description": "Returns the price per $100 face value of a security that pays interest at maturity."
    },
    {
        "function": "PV",
        "description": "Calculates the present value of a loan or an investment, based on a constant interest rate."
    },
    {
        "function": "RATE",
        "description": "Returns the interest rate per period of an annuity."
    },
    {
        "function": "RECEIVED",
        "description": "Returns the amount received at maturity for a fully invested security."
    },
    {
        "function": "RRI",
        "description": "Returns an equivalent interest rate for the growth of an investment."
    },
    {
        "function": "SLN",
        "description": "Returns the straight-line depreciation of an asset for one period."
    },
    {
        "function": "SYD",
        "description": "Returns the sum-of-years' digits depreciation of an asset for a specified period."
    },
    {
        "function": "TBILLEQ",
        "description": "Returns the bond-equivalent yield for a Treasury bill."
    },
    {
        "function": "TBILLPRICE",
        "description": "Returns the price per $100 face value for a Treasury bill."
    },
    {
        "function": "TBILLYIELD",
        "description": "Returns the yield for a Treasury bill."
    },
    {
        "function": "VDB",
        "description": "Returns the depreciation of an asset for any period you specify, including partial periods, using the double-declining balance method or some other method you specify."
    },
    {
        "function": "XIRR",
        "description": "Returns the internal rate of return for a schedule of cash flows that is not necessarily periodic."
    },
    {
        "function": "XNPV",
        "description": "Returns the present value for a schedule of cash flows that is not necessarily periodic."
    },
    {
        "function": "YIELD",
        "description": "Returns the yield on a security that pays periodic interest."
    },
    {
        "function": "YIELDDISC",
        "description": "Returns the annual yield for a discounted security."
    },
    {
        "function": "YIELDMAT",
        "description": "Returns the annual yield of a security that pays interest at maturity."
    },
    {
        "function": "COLUMNSTATISTICS",
        "description": "Returns a table of statistics regarding every column in every table in the model."
    },
    {
        "function": "CONTAINS",
        "description": "Returns true if values for all referred columns exist, or are contained, in those columns; otherwise, the function returns false."
    },
    {
        "function": "CONTAINSROW",
        "description": "Returns TRUE if a row of values exists or contained in a table, otherwise returns FALSE."
    },
    {
        "function": "CONTAINSSTRING",
        "description": "Returns TRUE or FALSE indicating whether one string contains another string."
    },
    {
        "function": "CONTAINSSTRINGEXACT",
        "description": "Returns TRUE or FALSE indicating whether one string contains another string."
    },
    {
        "function": "CUSTOMDATA",
        "description": "Returns the content of the CustomData property in the connection string."
    },
    {
        "function": "HASONEFILTER",
        "description": "Returns TRUE when the number of directly filtered values on columnName is one; otherwise returns FALSE."
    },
    {
        "function": "HASONEVALUE",
        "description": "Returns TRUE when the context for columnName has been filtered down to one distinct value only. Otherwise is FALSE."
    },
    {
        "function": "ISAFTER",
        "description": "A boolean function that emulates the behavior of a Start At clause and returns true for a row that meets all of the condition parameters."
    },
    {
        "function": "ISBLANK",
        "description": "Checks whether a value is blank, and returns TRUE or FALSE."
    },
    {
        "function": "ISCROSSFILTERED",
        "description": "Returns TRUE when columnName or another column in the same or related table is being filtered."
    },
    {
        "function": "ISEMPTY",
        "description": "Checks if a table is empty."
    },
    {
        "function": "ISERROR",
        "description": "Checks whether a value is an error, and returns TRUE or FALSE."
    },
    {
        "function": "ISEVEN",
        "description": "Returns TRUE if number is even, or FALSE if number is odd."
    },
    {
        "function": "ISFILTERED",
        "description": "Returns TRUE when columnName is being filtered directly."
    },
    {
        "function": "ISINSCOPE",
        "description": "Returns true when the specified column is the level in a hierarchy of levels."
    },
    {
        "function": "ISLOGICAL",
        "description": "Checks whether a value is a logical value, (TRUE or FALSE), and returns TRUE or FALSE."
    },
    {
        "function": "ISNONTEXT",
        "description": "Checks if a value is not text (blank cells are not text), and returns TRUE or FALSE."
    },
    {
        "function": "ISNUMBER",
        "description": "Checks whether a value is a number, and returns TRUE or FALSE."
    },
    {
        "function": "ISODD",
        "description": "Returns TRUE if number is odd, or FALSE if number is even."
    },
    {
        "function": "ISONORAFTER",
        "description": "A boolean function that emulates the behavior of a Start At clause and returns true for a row that meets all of the condition parameters."
    },
    {
        "function": "ISSELECTEDMEASURE",
        "description": "Used by expressions for calculation items to determine the measure that is in context is one of those specified in a list of measures."
    },
    {
        "function": "ISSUBTOTAL",
        "description": "Creates another column in a SUMMARIZE expression that returns True if the row contains subtotal values for the column given as argument, otherwise returns False."
    },
    {
        "function": "ISTEXT",
        "description": "Checks if a value is text, and returns TRUE or FALSE."
    },
    {
        "function": "NONVISUAL",
        "description": "Marks a value filter in a SUMMARIZECOLUMNS expression as non-visual."
    },
    {
        "function": "SELECTEDMEASURE",
        "description": "Used by expressions for calculation items to reference the measure that is in context."
    },
    {
        "function": "SELECTEDMEASUREFORMATSTRING",
        "description": "Used by expressions for calculation items to retrieve the format string of the measure that is in context."
    },
    {
        "function": "SELECTEDMEASURENAME",
        "description": "Used by expressions for calculation items to determine the measure that is in context by name."
    },
    {
        "function": "USERCULTURE",
        "description": "Returns the locale for the current user."
    },
    {
        "function": "USERNAME",
        "description": "Returns the domain name and username from the credentials given to the system at connection time."
    },
    {
        "function": "USEROBJECTID",
        "description": "Returns the current user's Object ID or SID."
    },
    {
        "function": "USERPRINCIPALNAME",
        "description": "Returns the user principal name."
    },
    {
        "function": "AND",
        "description": "Checks whether both arguments are TRUE, and returns TRUE if both arguments are TRUE."
    },
    {
        "function": "BITAND",
        "description": "Returns a bitwise 'AND' of two numbers."
    },
    {
        "function": "BITLSHIFT",
        "description": "Returns a number shifted left by the specified number of bits."
    },
    {
        "function": "BITOR",
        "description": "Returns a bitwise 'OR' of two numbers."
    },
    {
        "function": "BITRSHIFT",
        "description": "Returns a number shifted right by the specified number of bits."
    },
    {
        "function": "BITXOR",
        "description": "Returns a bitwise 'XOR' of two numbers."
    },
    {
        "function": "COALESCE",
        "description": "Returns the first expression that does not evaluate to BLANK."
    },
    {
        "function": "FALSE",
        "description": "Returns the logical value FALSE."
    },
    {
        "function": "IF",
        "description": "Checks a condition, and returns one value when TRUE, otherwise it returns a second value."
    },
    {
        "function": "IF.EAGER",
        "description": "Checks a condition, and returns one value when TRUE, otherwise it returns a second value. Uses an eager execution plan which always executes the branch expressions regardless of the condition expression."
    },
    {
        "function": "IFERROR",
        "description": "Evaluates an expression and returns a specified value if the expression returns an error"
    },
    {
        "function": "NOT",
        "description": "Changes FALSE to TRUE, or TRUE to FALSE."
    },
    {
        "function": "OR",
        "description": "Checks whether one of the arguments is TRUE to return TRUE."
    },
    {
        "function": "SWITCH",
        "description": "Evaluates an expression against a list of values and returns one of multiple possible result expressions."
    },
    {
        "function": "TRUE",
        "description": "Returns the logical value TRUE."
    },
    {
        "function": "ABS",
        "description": "Returns the absolute value of a number."
    },
    {
        "function": "ACOS",
        "description": "Returns the arccosine, or inverse cosine, of a number."
    },
    {
        "function": "ACOSH",
        "description": "Returns the inverse hyperbolic cosine of a number."
    },
    {
        "function": "ACOT",
        "description": "Returns the arccotangent, or inverse cotangent, of a number."
    },
    {
        "function": "ACOTH",
        "description": "Returns the inverse hyperbolic cotangent of a number."
    },
    {
        "function": "ASIN",
        "description": "Returns the arcsine, or inverse sine, of a number."
    },
    {
        "function": "ASINH",
        "description": "Returns the inverse hyperbolic sine of a number."
    },
    {
        "function": "ATAN",
        "description": "Returns the arctangent, or inverse tangent, of a number."
    },
    {
        "function": "ATANH",
        "description": "Returns the inverse hyperbolic tangent of a number."
    },
    {
        "function": "CEILING",
        "description": "Rounds a number up, to the nearest integer or to the nearest multiple of significance."
    },
    {
        "function": "CONVERT",
        "description": "Converts an expression of one data type to another."
    },
    {
        "function": "COS",
        "description": "Returns the cosine of the given angle."
    },
    {
        "function": "COSH",
        "description": "Returns the hyperbolic cosine of a number."
    },
    {
        "function": "COT",
        "description": "Returns the cotangent of an angle specified in radians."
    },
    {
        "function": "COTH",
        "description": "Returns the hyperbolic cotangent of a hyperbolic angle."
    },
    {
        "function": "CURRENCY",
        "description": "Evaluates the argument and returns the result as currency data type."
    },
    {
        "function": "DEGREES",
        "description": "Converts radians into degrees."
    },
    {
        "function": "DIVIDE",
        "description": "Performs division and returns alternate result or BLANK() on division by 0."
    },
    {
        "function": "EVEN",
        "description": "Returns number rounded up to the nearest even integer."
    },
    {
        "function": "EXP",
        "description": "Returns e raised to the power of a given number."
    },
    {
        "function": "FACT",
        "description": "Returns the factorial of a number, equal to the series 1*2*3*...* , ending in the given number."
    },
    {
        "function": "FLOOR",
        "description": "Rounds a number down, toward zero, to the nearest multiple of significance."
    },
    {
        "function": "GCD",
        "description": "Returns the greatest common divisor of two or more integers."
    },
    {
        "function": "INT",
        "description": "Rounds a number down to the nearest integer."
    },
    {
        "function": "ISO.CEILING",
        "description": "Rounds a number up, to the nearest integer or to the nearest multiple of significance."
    },
    {
        "function": "LCM",
        "description": "Returns the least common multiple of integers."
    },
    {
        "function": "LN",
        "description": "Returns the natural logarithm of a number."
    },
    {
        "function": "LOG",
        "description": "Returns the logarithm of a number to the base you specify."
    },
    {
        "function": "LOG10",
        "description": "Returns the base-10 logarithm of a number."
    },
    {
        "function": "MOD",
        "description": "Returns the remainder after a number is divided by a divisor. The result always has the same sign as the divisor."
    },
    {
        "function": "MROUND",
        "description": "Returns a number rounded to the desired multiple."
    },
    {
        "function": "ODD",
        "description": "Returns number rounded up to the nearest odd integer."
    },
    {
        "function": "PI",
        "description": "Returns the value of Pi, 3.14159265358979, accurate to 15 digits."
    },
    {
        "function": "POWER",
        "description": "Returns the result of a number raised to a power."
    },
    {
        "function": "QUOTIENT",
        "description": "Performs division and returns only the integer portion of the division result."
    },
    {
        "function": "RADIANS",
        "description": "Converts degrees to radians."
    },
    {
        "function": "RAND",
        "description": "Returns a random number greater than or equal to 0 and less than 1, evenly distributed."
    },
    {
        "function": "RANDBETWEEN",
        "description": "Returns a random number in the range between two numbers you specify."
    },
    {
        "function": "ROUND",
        "description": "Rounds a number to the specified number of digits."
    },
    {
        "function": "ROUNDDOWN",
        "description": "Rounds a number down, toward zero."
    },
    {
        "function": "ROUNDUP",
        "description": "Rounds a number up, away from 0 (zero)."
    },
    {
        "function": "SIGN",
        "description": "Determines the sign of a number, the result of a calculation, or a value in a column."
    },
    {
        "function": "SIN",
        "description": "Returns the sine of the given angle."
    },
    {
        "function": "SINH",
        "description": "Returns the hyperbolic sine of a number."
    },
    {
        "function": "SQRT",
        "description": "Returns the square root of a number."
    },
    {
        "function": "SQRTPI",
        "description": "Returns the square root of (number * pi)."
    },
    {
        "function": "TAN",
        "description": "Returns the tangent of the given angle."
    },
    {
        "function": "TANH",
        "description": "Returns the hyperbolic tangent of a number."
    },
    {
        "function": "TRUNC",
        "description": "Truncates a number to an integer by removing the decimal, or fractional, part of the number."
    },
    {
        "function": "BLANK",
        "description": "Returns a blank."
    },
    {
        "function": "ERROR",
        "description": "Raises an error with an error message."
    },
    {
        "function": "EVALUATEANDLOG",
        "description": "Returns the value of the first argument and logs it in a DAX Evaluation Log profiler event."
    },
    {
        "function": "TOCSV",
        "description": "Returns a table as a string in CSV format."
    },
    {
        "function": "TOJSON",
        "description": "Returns a table as a string in JSON format."
    },
    {
        "function": "PATH",
        "description": "Returns a delimited text string with the identifiers of all the parents of the current identifier."
    },
    {
        "function": "PATHCONTAINS",
        "description": "Returns TRUE if the specified item exists within the specified path."
    },
    {
        "function": "PATHITEM",
        "description": "Returns the item at the specified position from a string resulting from evaluation of a PATH function."
    },
    {
        "function": "PATHITEMREVERSE",
        "description": "Returns the item at the specified position from a string resulting from evaluation of a PATH function."
    },
    {
        "function": "PATHLENGTH",
        "description": "Returns the number of parents to the specified item in a given PATH result, including self."
    },
    {
        "function": "CROSSFILTER",
        "description": "Specifies the cross-filtering direction to be used in a calculation for a relationship that exists between two columns."
    },
    {
        "function": "RELATED",
        "description": "Returns a related value from another table."
    },
    {
        "function": "RELATEDTABLE",
        "description": "Evaluates a table expression in a context modified by the given filters."
    },
    {
        "function": "USERELATIONSHIP",
        "description": "Specifies the relationship to be used in a specific calculation as the one that exists between columnName1 and columnName2."
    },
    {
        "function": "BETA.DIST",
        "description": "Returns the beta distribution."
    },
    {
        "function": "BETA.INV",
        "description": "Returns the inverse of the beta cumulative probability density function (BETA.DIST)."
    },
    {
        "function": "CHISQ.DIST",
        "description": "Returns the chi-squared distribution."
    },
    {
        "function": "CHISQ.DIST.RT",
        "description": "Returns the right-tailed probability of the chi-squared distribution."
    },
    {
        "function": "CHISQ.INV",
        "description": "Returns the inverse of the left-tailed probability of the chi-squared distribution."
    },
    {
        "function": "CHISQ.INV.RT",
        "description": "Returns the inverse of the right-tailed probability of the chi-squared distribution."
    },
    {
        "function": "COMBIN",
        "description": "Returns the number of combinations for a given number of items."
    },
    {
        "function": "COMBINA",
        "description": "Returns the number of combinations (with repetitions) for a given number of items."
    },
    {
        "function": "CONFIDENCE.NORM",
        "description": "The confidence interval is a range of values."
    },
    {
        "function": "CONFIDENCE.T",
        "description": "Returns the confidence interval for a population mean, using a Student's t distribution."
    },
    {
        "function": "EXPON.DIST",
        "description": "Returns the exponential distribution."
    },
    {
        "function": "GEOMEAN",
        "description": "Returns the geometric mean of the numbers in a column."
    },
    {
        "function": "GEOMEANX",
        "description": "Returns the geometric mean of an expression evaluated for each row in a table."
    },
    {
        "function": "LINEST",
        "description": "Uses the Least Squares method to calculate a straight line that best fits the given data."
    },
    {
        "function": "LINESTX",
        "description": "Uses the Least Squares method to calculate a straight line that best fits the given data. The data result from expressions evaluated for each row in a table."
    },
    {
        "function": "MEDIAN",
        "description": "Returns the median of numbers in a column."
    },
    {
        "function": "MEDIANX",
        "description": "Returns the median number of an expression evaluated for each row in a table."
    },
    {
        "function": "NORM.DIST",
        "description": "Returns the normal distribution for the specified mean and standard deviation."
    },
    {
        "function": "NORM.INV",
        "description": "The inverse of the normal cumulative distribution for the specified mean and standard deviation."
    },
    {
        "function": "NORM.S.DIST",
        "description": "Returns the standard normal distribution (has a mean of zero and a standard deviation of one)."
    },
    {
        "function": "NORM.S.INV",
        "description": "Returns the inverse of the standard normal cumulative distribution."
    },
    {
        "function": "PERCENTILE.EXC",
        "description": "Returns the k-th percentile of values in a range, where k is in the range 0..1, exclusive."
    },
    {
        "function": "PERCENTILE.INC",
        "description": "Returns the k-th percentile of values in a range, where k is in the range 0..1, inclusive."
    },
    {
        "function": "PERCENTILEX.EXC",
        "description": "Returns the percentile number of an expression evaluated for each row in a table."
    },
    {
        "function": "PERCENTILEX.INC",
        "description": "Returns the percentile number of an expression evaluated for each row in a table."
    },
    {
        "function": "PERMUT",
        "description": "Returns the number of permutations for a given number of objects that can be selected from number objects."
    },
    {
        "function": "POISSON.DIST",
        "description": "Returns the Poisson distribution."
    },
    {
        "function": "RANK.EQ",
        "description": "Returns the ranking of a number in a list of numbers."
    },
    {
        "function": "RANKX",
        "description": "Returns the ranking of a number in a list of numbers for each row in the table argument."
    },
    {
        "function": "SAMPLE",
        "description": "Returns a sample of N rows from the specified table."
    },
    {
        "function": "STDEV.P",
        "description": "Returns the standard deviation of the entire population."
    },
    {
        "function": "STDEV.S",
        "description": "Returns the standard deviation of a sample population."
    },
    {
        "function": "STDEVX.P",
        "description": "Returns the standard deviation of the entire population."
    },
    {
        "function": "STDEVX.S",
        "description": "Returns the standard deviation of a sample population."
    },
    {
        "function": "T.DIST",
        "description": "Returns the Student's left-tailed t-distribution."
    },
    {
        "function": "T.DIST.2T",
        "description": "Returns the two-tailed Student's t-distribution."
    },
    {
        "function": "T.DIST.RT",
        "description": "Returns the right-tailed Student's t-distribution."
    },
    {
        "function": "T.INV",
        "description": "Returns the left-tailed inverse of the Student's t-distribution."
    },
    {
        "function": "T.INV.2t",
        "description": "Returns the two-tailed inverse of the Student's t-distribution."
    },
    {
        "function": "VAR.P",
        "description": "Returns the variance of the entire population."
    },
    {
        "function": "VAR.S",
        "description": "Returns the variance of a sample population."
    },
    {
        "function": "VARX.P",
        "description": "Returns the variance of the entire population."
    },
    {
        "function": "VARX.S",
        "description": "Returns the variance of a sample population."
    },
    {
        "function": "ADDCOLUMNS",
        "description": "Adds calculated columns to the given table or table expression."
    },
    {
        "function": "ADDMISSINGITEMS",
        "description": "Adds combinations of items from multiple columns to a table if they do not already exist."
    },
    {
        "function": "CROSSJOIN",
        "description": "Returns a table that contains the Cartesian product of all rows from all tables in the arguments."
    },
    {
        "function": "CURRENTGROUP",
        "description": "Returns a set of rows from the table argument of a GROUPBY expression."
    },
    {
        "function": "DATATABLE",
        "description": "Provides a mechanism for declaring an inline set of data values."
    },
    {
        "function": "DETAILROWS",
        "description": "Evaluates a Detail Rows Expression defined for a measure and returns the data."
    },
    {
        "function": "DISTINCT column",
        "description": "Returns a one-column table that contains the distinct values from the specified column."
    },
    {
        "function": "DISTINCT table",
        "description": "Returns a table by removing duplicate rows from another table or expression."
    },
    {
        "function": "EXCEPT",
        "description": "Returns the rows of one table which do not appear in another table."
    },
    {
        "function": "FILTERS",
        "description": "Returns a table of values directly applied as filters to columnName."
    },
    {
        "function": "GENERATE",
        "description": "Returns a table with the Cartesian product between each row in table1 and the table that results from evaluating table2 in the context of the current row from table1."
    },
    {
        "function": "GENERATEALL",
        "description": "Returns a table with the Cartesian product between each row in table1 and the table that results from evaluating table2 in the context of the current row from table1."
    },
    {
        "function": "GENERATESERIES",
        "description": "Returns a single column table containing the values of an arithmetic series."
    },
    {
        "function": "GROUPBY",
        "description": "Similar to the SUMMARIZE function, GROUPBY does not do an implicit CALCULATE for any extension columns that it adds."
    },
    {
        "function": "IGNORE",
        "description": "Modifies SUMMARIZECOLUMNS by omitting specific expressions from the BLANK/NULL evaluation."
    },
    {
        "function": "INTERSECT",
        "description": "Returns the row intersection of two tables, retaining duplicates."
    },
    {
        "function": "NATURALINNERJOIN",
        "description": "Performs an inner join of a table with another table."
    },
    {
        "function": "NATURALLEFTOUTERJOIN",
        "description": "Performs a join of the LeftTable with the RightTable."
    },
    {
        "function": "ROLLUP",
        "description": "Modifies the behavior of SUMMARIZE by adding rollup rows to the result on columns defined by the groupBy_columnName parameter."
    },
    {
        "function": "ROLLUPADDISSUBTOTAL",
        "description": "Modifies the behavior of SUMMARIZECOLUMNS by adding rollup/subtotal rows to the result based on the groupBy_columnName columns."
    },
    {
        "function": "ROLLUPISSUBTOTAL",
        "description": "Pairs rollup groups with the column added by ROLLUPADDISSUBTOTAL within an ADDMISSINGITEMS expression."
    },
    {
        "function": "ROLLUPGROUP",
        "description": "Modifies the behavior of SUMMARIZE and SUMMARIZECOLUMNS by adding rollup rows to the result on columns defined by the the groupBy_columnName parameter."
    },
    {
        "function": "ROW",
        "description": "Returns a table with a single row containing values that result from the expressions given to each column."
    },
    {
        "function": "SELECTCOLUMNS",
        "description": "Adds calculated columns to the given table or table expression."
    },
    {
        "function": "SUBSTITUTEWITHINDEX",
        "description": "Returns a table which represents a left semijoin of the two tables supplied as arguments."
    },
    {
        "function": "SUMMARIZE",
        "description": "Returns a summary table for the requested totals over a set of groups."
    },
    {
        "function": "SUMMARIZECOLUMNS",
        "description": "Returns a summary table over a set of groups."
    },
    {
        "function": "Table Constructor",
        "description": "Returns a table of one or more columns."
    },
    {
        "function": "TOPN",
        "description": "Returns the top N rows of the specified table."
    },
    {
        "function": "TREATAS",
        "description": "Applies the result of a table expression as filters to columns from an unrelated table."
    },
    {
        "function": "UNION",
        "description": "Creates a union (join) table from a pair of tables."
    },
    {
        "function": "VALUES",
        "description": "Returns a one-column table that contains the distinct values from the specified table or column."
    },
    {
        "function": "COMBINEVALUES",
        "description": "Joins two or more text strings into one text string."
    },
    {
        "function": "CONCATENATE",
        "description": "Joins two text strings into one text string."
    },
    {
        "function": "CONCATENATEX",
        "description": "Concatenates the result of an expression evaluated for each row in a table."
    },
    {
        "function": "EXACT",
        "description": "Compares two text strings and returns TRUE if they are exactly the same, FALSE otherwise."
    },
    {
        "function": "FIND",
        "description": "Returns the starting position of one text string within another text string."
    },
    {
        "function": "FIXED",
        "description": "Rounds a number to the specified number of decimals and returns the result as text."
    },
    {
        "function": "FORMAT",
        "description": "Converts a value to text according to the specified format."
    },
    {
        "function": "LEFT",
        "description": "Returns the specified number of characters from the start of a text string."
    },
    {
        "function": "LEN",
        "description": "Returns the number of characters in a text string."
    },
    {
        "function": "LOWER",
        "description": "Converts all letters in a text string to lowercase."
    },
    {
        "function": "MID",
        "description": "Returns a string of characters from the middle of a text string, given a starting position and length."
    },
    {
        "function": "REPLACE",
        "description": "REPLACE replaces part of a text string, based on the number of characters you specify, with a different text string."
    },
    {
        "function": "REPT",
        "description": "Repeats text a given number of times."
    },
    {
        "function": "RIGHT",
        "description": "RIGHT returns the last character or characters in a text string, based on the number of characters you specify."
    },
    {
        "function": "SEARCH",
        "description": "Returns the number of the character at which a specific character or text string is first found, reading left to right."
    },
    {
        "function": "SUBSTITUTE",
        "description": "Replaces existing text with new text in a text string."
    },
    {
        "function": "TRIM",
        "description": "Removes all spaces from text except for single spaces between words."
    },
    {
        "function": "UNICHAR",
        "description": "Returns the Unicode character referenced by the numeric value."
    },
    {
        "function": "UNICODE",
        "description": "Returns the numeric code corresponding to the first character of the text string."
    },
    {
        "function": "UPPER",
        "description": "Converts a text string to all uppercase letters."
    },
    {
        "function": "VALUE",
        "description": "Converts a text string that represents a number to a number."
    },
    {
        "function": "CLOSINGBALANCEMONTH",
        "description": "Evaluates the expression at the last date of the month in the current context."
    },
    {
        "function": "CLOSINGBALANCEQUARTER",
        "description": "Evaluates the expression at the last date of the quarter in the current context."
    },
    {
        "function": "CLOSINGBALANCEYEAR",
        "description": "Evaluates the expression at the last date of the year in the current context."
    },
    {
        "function": "DATEADD",
        "description": "Returns a table that contains a column of dates, shifted either forward or backward in time by the specified number of intervals from the dates in the current context."
    },
    {
        "function": "DATESBETWEEN",
        "description": "Returns a table that contains a column of dates that begins with a specified start date and continues until a specified end date."
    },
    {
        "function": "DATESINPERIOD",
        "description": "Returns a table that contains a column of dates that begins with a specified start date and continues for the specified number and type of date intervals."
    },
    {
        "function": "DATESMTD",
        "description": "Returns a table that contains a column of the dates for the month to date, in the current context."
    },
    {
        "function": "DATESQTD",
        "description": "Returns a table that contains a column of the dates for the quarter to date, in the current context."
    },
    {
        "function": "DATESYTD",
        "description": "Returns a table that contains a column of the dates for the year to date, in the current context."
    },
    {
        "function": "ENDOFMONTH",
        "description": "Returns the last date of the month in the current context for the specified column of dates."
    },
    {
        "function": "ENDOFQUARTER",
        "description": "Returns the last date of the quarter in the current context for the specified column of dates."
    },
    {
        "function": "ENDOFYEAR",
        "description": "Returns the last date of the year in the current context for the specified column of dates."
    },
    {
        "function": "FIRSTDATE",
        "description": "Returns the first date in the current context for the specified column of dates."
    },
    {
        "function": "LASTDATE",
        "description": "Returns the last date in the current context for the specified column of dates."
    },
    {
        "function": "NEXTDAY",
        "description": "Returns a table that contains a column of all dates from the next day, based on the first date specified in the dates column in the current context."
    },
    {
        "function": "NEXTMONTH",
        "description": "Returns a table that contains a column of all dates from the next month, based on the first date in the dates column in the current context."
    },
    {
        "function": "NEXTQUARTER",
        "description": "Returns a table that contains a column of all dates in the next quarter, based on the first date specified in the dates column, in the current context."
    },
    {
        "function": "NEXTYEAR",
        "description": "Returns a table that contains a column of all dates in the next year, based on the first date in the dates column, in the current context."
    },
    {
        "function": "OPENINGBALANCEMONTH",
        "description": "Evaluates the expression at the first date of the month in the current context."
    },
    {
        "function": "OPENINGBALANCEQUARTER",
        "description": "Evaluates the expression at the first date of the quarter, in the current context."
    },
    {
        "function": "OPENINGBALANCEYEAR",
        "description": "Evaluates the expression at the first date of the year in the current context."
    },
    {
        "function": "PARALLELPERIOD",
        "description": "Returns a table that contains a column of dates that represents a period parallel to the dates in the specified dates column, in the current context, with the dates shifted a number of intervals either forward in time or back in time."
    },
    {
        "function": "PREVIOUSDAY",
        "description": "Returns a table that contains a column of all dates representing the day that is previous to the first date in the dates column, in the current context."
    },
    {
        "function": "PREVIOUSMONTH",
        "description": "Returns a table that contains a column of all dates from the previous month, based on the first date in the dates column, in the current context."
    },
    {
        "function": "PREVIOUSQUARTER",
        "description": "Returns a table that contains a column of all dates from the previous quarter, based on the first date in the dates column, in the current context."
    },
    {
        "function": "PREVIOUSYEAR",
        "description": "Returns a table that contains a column of all dates from the previous year, given the last date in the dates column, in the current context."
    },
    {
        "function": "SAMEPERIODLASTYEAR",
        "description": "Returns a table that contains a column of dates shifted one year back in time from the dates in the specified dates column, in the current context."
    },
    {
        "function": "STARTOFMONTH",
        "description": "Returns the first date of the month in the current context for the specified column of dates."
    },
    {
        "function": "STARTOFQUARTER",
        "description": "Returns the first date of the quarter in the current context for the specified column of dates."
    },
    {
        "function": "STARTOFYEAR",
        "description": "Returns the first date of the year in the current context for the specified column of dates."
    },
    {
        "function": "TOTALMTD",
        "description": "Evaluates the value of the expression for the month to date, in the current context."
    },
    {
        "function": "TOTALQTD",
        "description": "Evaluates the value of the expression for the dates in the quarter to date, in the current context."
    },
    {
        "function": "TOTALYTD",
        "description": "Evaluates the year-to-date value of the expression in the current context."
    }
]